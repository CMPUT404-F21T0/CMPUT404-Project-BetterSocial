# Generated by Django 3.2.8 on 2021-10-24 05:26

import uuid

import bettersocial.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name = 'Author',
            fields = [
                ('id', models.BigAutoField(auto_created = True, primary_key = True, serialize = False, verbose_name = 'ID')),
                ('uuid', models.UUIDField(default = uuid.uuid4, editable = False, unique = True)),
                ('github_url', models.CharField(max_length = 255, null = True)),
                ('user', models.OneToOneField(on_delete = django.db.models.deletion.CASCADE, to = settings.AUTH_USER_MODEL)),
            ],
            options = {
                'verbose_name': 'Author',
                'verbose_name_plural': 'Authors',
            },
        ),
        migrations.CreateModel(
            name = 'Node',
            fields = [
                ('id', models.BigAutoField(auto_created = True, primary_key = True, serialize = False, verbose_name = 'ID')),
                ('host', models.CharField(max_length = 255, unique = True)),
                ('prefix', models.CharField(default = 'service', max_length = 32)),
                ('auth_username', models.CharField(max_length = 255)),
                ('auth_password', models.CharField(max_length = 255)),
                ('node_username', models.CharField(max_length = 255)),
                ('node_password', models.CharField(max_length = 255)),
            ],
            options = {
                'verbose_name': 'Node',
                'verbose_name_plural': 'Nodes',
            },
        ),
        migrations.CreateModel(
            name = 'Post',
            fields = [
                ('id', models.BigAutoField(auto_created = True, primary_key = True, serialize = False, verbose_name = 'ID')),
                ('uuid', models.UUIDField(default = uuid.uuid4, editable = False, unique = True)),
                ('recipient_uuid', models.UUIDField(null = True)),
                ('source', models.CharField(max_length = 255, null = True)),
                ('origin', models.CharField(max_length = 255, null = True)),
                ('content_type', models.CharField(choices = [('text/plain', 'Text'), ('text/markdown', 'Markdown'), ('application/base64', 'Base64 Encoded'), ('image/png;base64', 'Image (PNG)'), ('image/jpeg;base64', 'Image (JPEG)')], default = 'text/plain', max_length = 32)),
                ('title', models.CharField(max_length = 255)),
                ('description', models.TextField()),
                ('content', models.TextField()),
                ('categories', models.JSONField(default = list, validators = [bettersocial.validators.validate_categories])),
                ('visibility', models.CharField(choices = [('PUBLIC', 'Public'), ('FRIENDS', 'Friends'), ('PRIVATE', 'Private to Author (DM)')], default = 'PUBLIC', max_length = 32)),
                ('unlisted', models.BooleanField(default = False)),
                ('published', models.DateTimeField(auto_now_add = True)),
                ('author', models.ForeignKey(on_delete = django.db.models.deletion.CASCADE, to = 'bettersocial.author')),
            ],
            options = {
                'verbose_name': 'Post',
                'verbose_name_plural': 'Posts',
            },
        ),
        migrations.CreateModel(
            name = 'Inbox',
            fields = [
                ('id', models.BigAutoField(auto_created = True, primary_key = True, serialize = False, verbose_name = 'ID')),
                ('object', models.JSONField(default = dict)),
                ('author', models.ForeignKey(on_delete = django.db.models.deletion.CASCADE, to = 'bettersocial.author')),
                ('dj_content_type', models.ForeignKey(limit_choices_to = models.Q(('model', 'post'), ('model', 'like'), ('model', 'follower'), _connector = 'OR'), on_delete = django.db.models.deletion.CASCADE, to = 'contenttypes.contenttype')),
            ],
            options = {
                'verbose_name': 'Inbox',
                'verbose_name_plural': 'Inbox',
            },
        ),
        migrations.CreateModel(
            name = 'Comment',
            fields = [
                ('id', models.BigAutoField(auto_created = True, primary_key = True, serialize = False, verbose_name = 'ID')),
                ('uuid', models.UUIDField(default = uuid.uuid4, editable = False, unique = True)),
                ('author_uuid', models.UUIDField()),
                ('content_type', models.CharField(choices = [('text/plain', 'Text'), ('text/markdown', 'Markdown'), ('application/base64', 'Base64 Encoded'), ('image/png;base64', 'Image (PNG)'), ('image/jpeg;base64', 'Image (JPEG)')], default = 'text/plain', max_length = 32)),
                ('comment', models.TextField()),
                ('published', models.DateTimeField(auto_now_add = True)),
                ('post', models.ForeignKey(on_delete = django.db.models.deletion.CASCADE, to = 'bettersocial.post')),
            ],
            options = {
                'verbose_name': 'Comment',
                'verbose_name_plural': 'Comments',
            },
        ),
        migrations.CreateModel(
            name = 'UUIDRemoteCache',
            fields = [
                ('uuid', models.UUIDField(primary_key = True, serialize = False)),
                ('dj_content_type', models.ForeignKey(limit_choices_to = models.Q(('model', 'author'), ('model', 'post'), ('model', 'comment'), _connector = 'OR'), on_delete = django.db.models.deletion.CASCADE, to = 'contenttypes.contenttype')),
                ('node', models.ForeignKey(on_delete = django.db.models.deletion.CASCADE, to = 'bettersocial.node')),
            ],
            options = {
                'verbose_name': 'UUID Remote Cache',
                'verbose_name_plural': 'UUID Remote Cache',
                'unique_together': { ('uuid', 'dj_content_type') },
            },
        ),
        migrations.CreateModel(
            name = 'LikedRemote',
            fields = [
                ('id', models.BigAutoField(auto_created = True, primary_key = True, serialize = False, verbose_name = 'ID')),
                ('object_uuid', models.UUIDField()),
                ('author', models.ForeignKey(on_delete = django.db.models.deletion.CASCADE, to = 'bettersocial.author')),
                ('dj_content_type', models.ForeignKey(limit_choices_to = models.Q(('model', 'post'), ('model', 'comment'), _connector = 'OR'), on_delete = django.db.models.deletion.CASCADE, to = 'contenttypes.contenttype')),
            ],
            options = {
                'verbose_name': 'Remote Like',
                'verbose_name_plural': 'Remote Likes',
                'unique_together': { ('author', 'object_uuid') },
            },
        ),
        migrations.CreateModel(
            name = 'Like',
            fields = [
                ('id', models.BigAutoField(auto_created = True, primary_key = True, serialize = False, verbose_name = 'ID')),
                ('author_uuid', models.UUIDField()),
                ('dj_object_id', models.PositiveIntegerField()),
                ('dj_content_type', models.ForeignKey(limit_choices_to = models.Q(('model', 'post'), ('model', 'comment'), _connector = 'OR'), on_delete = django.db.models.deletion.CASCADE, to = 'contenttypes.contenttype')),
            ],
            options = {
                'verbose_name': 'Like',
                'verbose_name_plural': 'Likes',
                'unique_together': { ('author_uuid', 'dj_object_id', 'dj_content_type') },
            },
        ),
        migrations.CreateModel(
            name = 'Following',
            fields = [
                ('id', models.BigAutoField(auto_created = True, primary_key = True, serialize = False, verbose_name = 'ID')),
                ('following_uuid', models.UUIDField()),
                ('author', models.ForeignKey(on_delete = django.db.models.deletion.CASCADE, to = 'bettersocial.author')),
            ],
            options = {
                'verbose_name': 'Following',
                'verbose_name_plural': 'Following',
                'unique_together': { ('author', 'following_uuid') },
            },
        ),
        migrations.CreateModel(
            name = 'Follower',
            fields = [
                ('id', models.BigAutoField(auto_created = True, primary_key = True, serialize = False, verbose_name = 'ID')),
                ('follower_uuid', models.UUIDField()),
                ('author', models.ForeignKey(on_delete = django.db.models.deletion.CASCADE, to = 'bettersocial.author')),
            ],
            options = {
                'verbose_name': 'Follower',
                'verbose_name_plural': 'Followers',
                'unique_together': { ('author', 'follower_uuid') },
            },
        ),
    ]
